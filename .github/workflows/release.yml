name: release

on:
  push:
    branches:
      - beta
      - main

jobs:
  lint:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        deno: [v1.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ matrix.deno }}

      - name: Lint
        run: |
          deno fmt --check
          deno lint

  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        deno: [v1.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ matrix.deno }}

      # - name: Test
      #   run: deno task test --coverage=coverage

      # - name: Generate coverage
      #   run: deno coverage coverage --output=cov_profile.lcov --lcov

      # - uses: codecov/codecov-action@v4
      #   with:
      #     files: cov_profile.lcov
      #     token: ${{ secrets.CODECOV_TOKEN }}

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        targets:
          - target: x86_64-apple-darwin
          - target: aarch64-apple-darwin

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build
        run: cross build --release --target ${{ matrix.targets.target }}

      - name: Rename artifacts
        shell: bash
        run: |
          mv target/${{ matrix.targets.target }}/release/file_dialog{,-${{ matrix.targets.target }}}

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.targets.target }}
          path: target
          overwrite: true

  release:
    needs: [lint, test, build]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write

    strategy:
      matrix:
        os: [ubuntu-latest]

    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: cycjimmy/semantic-release-action@v4
        id: semantic

      - uses: actions/download-artifact@v4
        with:
          path: target

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3

      - name: Upload releases
        if: ${{ steps.semantic.outputs.new_release_published == 'true' }}
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/**/release/*.dylib
            target/**/release/*.dll
            target/**/release/*.so
          tag_name: ${{ steps.semantic.outputs.new_release_git_tag }}
          fail_on_unmatched_files: true
